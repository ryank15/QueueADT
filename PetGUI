package PetGUI;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import jsjf.LinkedQueue;
import jsjf.QueueADT;

public class PetGui {
	public PetGui() {
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				new GUIPanel();
			}
		});
	}

	public static void main(String[] args) {
		new PetGui();
	}
}

class GUIPanel implements ActionListener {
	private JFrame frame;
	private JPanel framePanel, dataPanel, buttonPanel;
	private JTextArea dataTA;
	private JButton enqueueBtn, dequeueBtn, firstBtn, allBtn;
	private JTextField idTF, nameTF, ownerTF;
	private QueueADT<Pet> queue;

	public GUIPanel() {
		queue = new LinkedQueue<>();

		queue.enqueue(new Pet(1, "Fido", "Bob"));
		System.out.println(queue);

		queue.enqueue(new Pet(2, "Ziggy", "Sue"));
		System.out.println(queue);

		queue.enqueue(new Pet(3, "Fluffy", "Mike"));
		System.out.println(queue);

		framePanel = new JPanel();
		dataPanel = new JPanel();
		buttonPanel = new JPanel();

		dataTA = new JTextArea(20, 60);
		JScrollPane dataSP = new JScrollPane(dataTA);
		dataPanel.add(dataSP);

		JLabel idLBL = new JLabel("Id");
		idTF = new JTextField(5);
		JLabel nameLBL = new JLabel("Pet Name");
		nameTF = new JTextField(5);
		JLabel ownerLBL = new JLabel("Owner Name");
		ownerTF = new JTextField(5);

		enqueueBtn = new JButton("Enqueue");
		enqueueBtn.addActionListener(this);

		dequeueBtn = new JButton("Dequeue");
		dequeueBtn.addActionListener(this);

		firstBtn = new JButton("First");
		firstBtn.addActionListener(this);
		
		allBtn = new JButton("All");
		allBtn.addActionListener(this);

		buttonPanel.add(idLBL);
		buttonPanel.add(idTF);
		buttonPanel.add(nameLBL);
		buttonPanel.add(nameTF);
		buttonPanel.add(ownerLBL);
		buttonPanel.add(ownerTF);
		buttonPanel.add(enqueueBtn);
		buttonPanel.add(dequeueBtn);
		buttonPanel.add(firstBtn);
		buttonPanel.add(allBtn);

		framePanel.setOpaque(true);
		framePanel.setLayout(new BorderLayout());
		framePanel.add(buttonPanel, BorderLayout.NORTH);
		framePanel.add(dataPanel, BorderLayout.CENTER);

		frame = new JFrame("Pet Queue GUI");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setContentPane(framePanel);
		frame.pack();
		frame.setVisible(true);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object source = e.getSource();
		if (source == enqueueBtn) {
			int id = Integer.parseInt(idTF.getText());
			String name = nameTF.getText();
			String owner = ownerTF.getText();
			queue.enqueue(new Pet(id, name, owner));
			dataTA.setText("Remaining Queue:\n" + queue.toString());
		} else if (source == dequeueBtn) {
			Pet p = queue.dequeue();
			idTF.setText(String.valueOf(p.getId()));
			nameTF.setText(p.getName());
			ownerTF.setText(p.getOwner());
			dataTA.setText("Remaining Queue:\n" + queue.toString());
		} else if (source == firstBtn) {
			Pet p = queue.first();
			idTF.setText(String.valueOf(p.getId()));
			nameTF.setText(p.getName());
			ownerTF.setText(p.getOwner());
			dataTA.setText("First In Queue:\n" + queue.first());
		}
		else{
			dataTA.setText("Queue:\n" + queue.toString());
		}
	}
}
